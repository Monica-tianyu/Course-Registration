#include"data.h"
#include<iostream>
#include<cstring>

using namespace std;

//登录界面
void Login()
{
	cout << "====================================" << endl;
	cout << "1.学生登录 2.学生注册 3.管理员登录" << endl;
	cout << "====================================" << endl;
	cout << "您选择的操作是（请输入单个数字）：" ;
	int n;
	cin >> n;
	//判断输入是否为int型，以及是否为1,2,3
	while (!cin.good() || (n != 1 && n != 2 && n != 3))
	{
		cout << "输入错误！请重新输入" << endl;
		cin.clear();
		cin.ignore();
		cin >> n;
	}
	if (n == 1)
	{
		
		FILE *fp = fopen("student.txt", "r");
		if (fp == NULL)
		{
			cout << "尚未有学生注册，请先注册！" << endl;
			Login();
			return;
		}
		vector<Student> stu;
		char temp[50];
		fscanf(fp, "%s", temp);
		while (!feof(fp))
		{
			//char temp[50];
			char *p;
			Student s;
			//fscanf(fp, "%s", temp);
			p = strtok(temp, ",");	
			s.student_ID = (char*)malloc(sizeof(temp));			
			strcpy(s.student_ID , p);
			//cout << s.student_ID << endl;
			p = strtok(NULL, ",");	
			s.key = (char *)malloc(sizeof(temp));			
			strcpy(s.key , p);			
			stu.push_back(s);	
			fscanf(fp, "%s", temp);
			//free( s.student_ID);
			//free( s.key);
		}
		fclose(fp);
		
		
		cout << "输入学生ID：";
		char student[20];
		cin >> student;

		bool flag = false;
		unsigned i = 0;
		for (; i < stu.size(); ++i)
		{
			if (compare(student, stu[i].student_ID) == 1)
			{
				flag = true;
				break;
			}
		}
		if (flag == false)
		{
			cout << "该ID不存在！请重新登录！" << endl;			
			Login();
		}
		if (flag == true)
		{
			cout << "输入密码：";
			char password[30];
			cin >> password;
			while (compare(password, stu[i].key) != 1)
			{
				cout << "密码错误！请重新输入！" << endl;
				cin >> password;
			}
			cout << "*************登录成功！*************" << endl;
			cout << endl;
			choice2(student);			
		}

	}
	if (n == 2)
	{
		//读取学生数据
		char ID[20];
		char k[30];
		FILE *fp = fopen("student.txt", "r+");
		if (fp == NULL)
		{			
			fp = fopen("student.txt", "w+");
			if (fp == NULL)
			{
				cout << "创建失败！" << endl;
				exit(-1);
			}
			cout << "输入学生ID：(格式为191220xxx  其中x为任意单个数字)";			
			cin >> ID;
			while (strlen(ID) != 9)
			{
				cout << "输入ID格式不对！请重新输入！" << endl;
				cin >> ID;
			}
			cout << "输入密码：";			
			cin >> k;

			fprintf(fp, "%s,%s\n", ID, k);
			fclose(fp);
			//为新注册的学生创建txt文件
			char nch[20];
			strcpy(nch, ID);
			strcat(nch, ".txt");
			fp = fopen(nch, "w");
			if (fp == NULL)
			{
				cout << "创建失败！" << endl;
				exit(-1);
			}
			fclose(fp);
			cout << "注册成功！登录成功！" << endl;
			cout << endl;
			choice2(ID);
			return;
		}
		vector<Student> stu;
		char temp[50];
		fscanf(fp, "%s", temp);
		while (!feof(fp))
		{
			
			char *p;
			Student s;
			//fscanf(fp, "%s", temp);
			p = strtok(temp, ",");
			s.student_ID = (char*)malloc(sizeof(temp));
			strcpy(s.student_ID, p);
			//cout << s.student_ID << endl;
			p = strtok(NULL, ",");
			s.key = (char *)malloc(sizeof(temp));
			strcpy(s.key, p);
			stu.push_back(s);
			fscanf(fp, "%s", temp);
			//free( s.student_ID);
			//free( s.key);
		}

		cout << "输入学生ID：(格式为191220xxx  其中x为任意单个数字)";		
		cin >> ID;
		while (strlen(ID) != 9)
		{
			cout << "输入ID格式不对！请重新输入！" << endl;
			cin >> ID;
		}
		cout << "输入密码：";		
		cin >> k;

		//判断需注册ID是否已存在
		bool flag = false;
		unsigned i = 0;
		for (; i < stu.size(); ++i)
		{
			if (compare(ID, stu[i].student_ID) == 1)
			{
				flag = true;
				break;
			}
		}
		if (flag == true)
		{
			cout << "该ID已存在！注册失败！" << endl;
			Login();
		}
		if (flag == false)
		{
			fprintf(fp, "%s,%s\n", ID, k);
			fclose(fp);
			//为新注册的学生创建txt文件
			char nch[20];
			strcpy(nch, ID);
			strcat(nch, ".txt");
			fp = fopen(nch , "w");
			if (fp == NULL)
			{
				cout << "创建失败！" << endl;
				exit(-1);
			}
			fclose(fp);
			cout << "注册成功！登录成功！" << endl;
			cout << endl;
			choice2(ID);
		}
	}
	if (n == 3)
	{
		cout << "输入管理员ID：";
		char manager[6]="Admin";
		char ch[50];
		cin >> ch;
		//判断ID是否正确
		while(!compare(ch,manager))
		{
			cout << "管理员ID输入错误！请重新输入" << endl;
			cin >> ch;
		}
		cout << "输入密码：";
		char key[6] = "admin";
		cin >> ch;
		//判断密码是否正确
		while(!compare(ch, key))
		{
			cout << "密码错误！请重新输入" << endl;
			cin >> ch;
		}
		if (compare(ch, key))
		{
			cout << "*************登录成功！*************" << endl;
			cout << endl;
			choice1();
		}
	}
	
}

//判断输入ID及密码是否正确
int compare(const char ch[], const char manager[])
{
	int i;
	for ( i = 0; ch[i] != '\0'&&manager[i] != '\0'; ++i)
	{
		if (ch[i] != manager[i])return 0;
	}
	if(ch[i]=='\0'&&manager[i]=='\0')
	return 1;
	else return 0;
}



void change_password(char *ID)
{
	
	FILE *fp = fopen("student.txt", "r");
	if (fp == NULL)
	{
		cout << "打开失败！" << endl;
		exit(-1);
	}
	vector<Student> stu;
	char temp[50];
	fscanf(fp, "%s", temp);
	while (!feof(fp))
	{

		char *p;
		Student s;		
		p = strtok(temp, ",");
		s.student_ID = (char*)malloc(sizeof(temp));
		strcpy(s.student_ID, p);		
		p = strtok(NULL, ",");
		s.key = (char *)malloc(sizeof(temp));
		strcpy(s.key, p);
		stu.push_back(s);
		fscanf(fp, "%s", temp);
	}
	fclose(fp);

	char k[30];
	cout << "输入原密码：";
	cin >> k;
	
	unsigned i = 0;
	for (; i < stu.size(); ++i)
	{
		if (compare(ID, stu[i].student_ID) == 1)
		{
			

			if (compare(k, stu[i].key) == 1)
			{
				cout << "输入新密码：";
				char newkey[30];
				cin >> newkey;
				cout << "再次输入新密码：";
				char newkey2[30];
				cin >> newkey2;
				while (compare(newkey, newkey2) != 1)
				{
					cout << "两次输入不一致！请重新设置密码！" << endl;
					cout << "输入新密码：";
					cin >> newkey;
					cout << "再次输入新密码：";
					cin >> newkey2;
				}
				strcpy(stu[i].key, newkey);

				fp = fopen("student.txt", "w");
				if (fp == NULL)
				{
					cout << "打开失败！" << endl;
					exit(-1);
				}
				unsigned j = 0;
				for (; j < stu.size(); ++j)
				{
					fprintf(fp, "%s,%s\n", stu[j].student_ID, stu[j].key);
				}
				fclose(fp);
				cout << "密码更改成功！" << endl;
				choice2(ID);

			}
			else
			{
				cout << "密码输入错误！无法更改密码！" << endl;
				cout << "请选择：1.再次更改密码 2。进行其他操作";
				int op;
				cin >> op;
				if (op == 1)
				{
					change_password(ID);
				}
				if (op == 2)
				{
					choice2(ID);
				}
			}

			return;
		}
	}



	

}
