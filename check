#include"data.h"
#include<iostream>

using namespace std;

//查看个人课表
void check(char * ID)
{
	//读取全部课程信息
	FILE *fp = fopen("current_course.txt", "r");
	if (fp == NULL)
	{
		cout << "课程尚未录入！" << endl;
		choice2(ID);
	}
	vector<Course> course;
	Course c;
	fscanf(fp, "%s%s%s%d%d%s%s%d%f", &c.course_number, &c.course_name, &c.teacher, &c.capacity, &c.current_number, &c.type,&c.difficulty,&c.count,&c.score);
	course.push_back(c);
	fscanf(fp, "%s%s%s%d%d%s%s%d%f", &c.course_number, &c.course_name, &c.teacher, &c.capacity, &c.current_number, &c.type, &c.difficulty, &c.count, &c.score);
	while (!feof(fp))
	{
		course.push_back(c);
		fscanf(fp, "%s%s%s%d%d%s%s%d%f", &c.course_number, &c.course_name, &c.teacher, &c.capacity, &c.current_number, &c.type, &c.difficulty, &c.count, &c.score);
	}
	fclose(fp);

	//读取学生个人选课信息
	char nch[20];
	strcpy(nch, ID);
	strcat(nch, ".txt");
	fp = fopen(nch, "r+");
	if (fp == NULL)
	{
		cout << "打开失败！" << endl;
		exit(-1);
	}
	vector<PersonalCourse> personalcourse;
	PersonalCourse p;
	fscanf(fp, "%s%s%d", &p.course_number, &p.assistant, &p.if_evaluate);
	while (!feof(fp))
	{
		personalcourse.push_back(p);
		fscanf(fp, "%s%s%d", &p.course_number, &p.assistant, &p.if_evaluate);
	}
	fclose(fp);

	unsigned i = 0;
	unsigned j = 0;
	for (; i < personalcourse.size(); ++i)
	{
		for (; j < course.size(); ++j)
		{
			if (shift(personalcourse[i].course_number) == shift(course[j].course_number))
			{
				strcpy(personalcourse[i].course_name, course[j].course_name);
				strcpy(personalcourse[i].teacher, course[j].teacher);
				strcpy(personalcourse[i].type, course[j].type);
				break;
			}
		}
	}
	//cout << personalcourse[2].course_name << endl;
	cout << "***********************************************************************" << endl;
	cout.setf(ios::left);
	cout.width(10);
	cout << "课程编号";
	cout.width(20);
	cout << "课程名称";
	cout.width(10);
	cout << "授课老师";
	cout.width(10);
	cout << "课程类型";
	cout.width(10);
	cout << "个人助教";
	cout.width(10);
	cout << "评分已否" << endl;

	int pro = 0;
	int npro = 0;
	for (i = 0; i < personalcourse.size(); ++i)
	{
		cout.width(10);
		cout << personalcourse[i].course_number;
		cout.width(20);
		cout << personalcourse[i].course_name;
		cout.width(10);
		cout << personalcourse[i].teacher;
		cout.width(10);
		cout << personalcourse[i].type;
		cout.width(10);
		cout << personalcourse[i].assistant;
		cout.width(10);
		cout << personalcourse[i].if_evaluate << endl;

		if (compare(personalcourse[i].type, "专业课") == 1)
		{
			pro++;
		}
		if (compare(personalcourse[i].type, "非专业课") == 1)
		{
			npro++;
		}
	}
	cout << "***********************************************************************" << endl;
	if (pro < 4 || npro < 2)
	{
		cout << "根据学院要求，目前选课数量不达标！";
		if (npro >= 2)
		{
			cout << "仍差" << 4 - pro << "门专业课！" << endl;
		}
		if (pro >= 4)
		{
			cout << "仍差" << 2 - npro << "门非专业课！" << endl;
		}
		if (pro < 4 && npro < 2)
		{
			cout << "仍差" << 4 - pro << "门专业课，以及" << 2 - npro << "门非专业课！" << endl;
		}
	}
	cout << endl;
	choice2(ID);


}

